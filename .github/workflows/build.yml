name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          release: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: electron-build-artifact-${{ matrix.os }}
          path: |
            dist/*.zip
            dist/*.${{ matrix.os == 'macos-latest' && 'dmg' || 'exe' }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: release-${{ github.sha }}-${{ matrix.os }}-${{ github.run_number }}
          release_name: Release-${{ github.sha }}-${{ matrix.os }}-${{ github.run_number }}
          draft: false
          prerelease: false
          body: "Release of commit ${{ github.sha }} on ${{ matrix.os }}"

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: electron-build-artifact-${{ matrix.os }}

      - name: Upload Release Assets
        shell: pwsh
        run: |
          Get-ChildItem dist/* -Include *.zip, *.exe, *.dmg | ForEach-Object {
            $asset = $_.FullName
            Write-Host "Uploading $asset"
            Invoke-RestMethod `
              -Method Post `
              -Headers @{ "Authorization" = "token ${{ secrets.github_token }}" } `
              -ContentType "application/octet-stream" `
              -InFile $asset `
              -Uri "${{ steps.create_release.outputs.upload_url }}?name=$($_.Name)"
          }
